{"version":3,"sources":["pages/homepage/homepage.js","pages/aboutpage/aboutpage.js","pages/resumepage/resumepage.js","components/CustomNavbar/CustomNavbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","id","width","React","Component","AboutPage","ResumePage","href","Button","style","backgroundColor","Container","Row","Col","CustomNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropdownOnClick","setState","dropdownOpen","state","className","onClick","App","Fragment","CustomNavbar_CustomNavbar","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0471274.chunk.js","sourcesContent":["import React from 'react';\r\nimport './homepage.css';\r\n\r\nexport default class HomePage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div id=\"home\">\r\n                <h1 id=\"title\">Hi, I'm Rebecca</h1><br></br><hr width=\"50%\"></hr>\r\n                <h3 id=\"subtitle\">I'm a software engineer with a passion for digital art and UI/UX design</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './aboutpage.css';\r\n\r\nexport default class AboutPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div id=\"about\">\r\n                <h2>About Me</h2>\r\n                <p>I'm Rebecca Shi, and I'm currently a senior studying Computer Science \r\n                at New York University. I am passionate about coding, creating, and \r\n                learning. I love creating digital art, and I'm exploring UI/UX design. \r\n                You can see some of the stuff I've created in my portfolio.</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './resumepage.css';\r\nimport {Button, Container, Row, Col} from 'react-bootstrap';\r\n\r\nexport default class ResumePage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div id=\"resume\">\r\n                <a href=\"./resume.pdf\"><Button style = {{backgroundColor: 'skyblue'}}>Click here for a PDF</Button></a>\r\n                <Container>\r\n                  <Row>\r\n                    <Col><h3>Work Experience</h3></Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>JP Morgan Chase, Jersey City</Col>\r\n                    <Col>Sept 2018 - Present</Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>Software Engineering Intern</Col>\r\n                  </Row>\r\n                  <Row>\r\n                    Created and updated front-end features for assessing maturity levels of teams \r\n                    converting to Agile\r\n                  </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './customnavbar.css';\r\n\r\nexport default class CustomNavbar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {dropdownOpen: false};\r\n    }\r\n\r\n    dropdownOnClick = () => {\r\n        this.setState({\r\n            dropdownOpen: (this.state.dropdownOpen === false) ? true : false\r\n        })\r\n    }\r\n    render(){\r\n        return this.state.dropdownOpen ?\r\n        (\r\n            <div id=\"customNav\">\r\n                <span className=\"navbar-toggle\" id=\"js-navbar-toggle\">\r\n                    <i className=\"fas fa-bars\" onClick={this.dropdownOnClick}></i>\r\n                </span>\r\n                <a href=\"/\" className=\"logo\">Rebecca Shi</a>\r\n                <ul className=\"main-nav\" id=\"js-menu\">\r\n                    {/* <li><a href=\"/\" className=\"nav-links\">Home</a></li> */}\r\n                    <li><a href=\"/about\" className=\"nav-links\">About</a></li>\r\n                    <li><a href=\"/resume\" className=\"nav-links\">Resume</a></li>\r\n                    <li><a href=\"#\" className=\"nav-links\">Portfolio</a></li>\r\n                </ul>\r\n            </div>\r\n        ):\r\n        (\r\n            <div id=\"customNav\">\r\n                <span className=\"navbar-toggle\" id=\"js-navbar-toggle\">\r\n                    <i className=\"fas fa-bars\" onClick={this.dropdownOnClick}></i>\r\n                </span>\r\n                <a href=\"/\" className=\"logo\">Rebecca Shi</a>\r\n                <ul className=\"main-nav-gone\" id=\"js-menu\">\r\n                    {/* <li><a href=\"/\" className=\"nav-links\">Home</a></li> */}\r\n                    <li><a href=\"/about\" className=\"nav-links\">About</a></li>\r\n                    <li><a href=\"/resume\" className=\"nav-links\">Resume</a></li>\r\n                    <li><a href=\"#\" className=\"nav-links\">Portfolio</a></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport HomePage from './pages/homepage/homepage';\r\nimport AboutPage from './pages/aboutpage/aboutpage';\r\nimport ResumePage from './pages/resumepage/resumepage';\r\nimport CustomNavbar from './components/CustomNavbar/CustomNavbar';\r\n\r\nconst App = () => (\r\n  <>\r\n    <div className=\"App\">\r\n      <CustomNavbar />\r\n      <Router>\r\n        <div>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route path=\"/about\" component={AboutPage} />\r\n          <Route path=\"/resume\" component={ResumePage} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  </>\r\n)\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}